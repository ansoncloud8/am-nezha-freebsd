name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    name: Build and Release All Missing Versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup and Build on FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 14.1
          prepare: |
            pkg install -y wget curl git go121 gcc bash jq node zip
            ln -s /usr/local/bin/go121 /usr/local/bin/go
          run: |
            # Fetch latest local and remote tags
            LOCAL_LATEST=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "")
            REMOTE_TAGS=$(curl -sL "https://api.github.com/repos/naiba/nezha/releases" | jq -r '.[].tag_name' | sort -V)

            # Find all unsynced versions
            UNSYNCED_VERSIONS=$(echo "$REMOTE_TAGS" | awk -v local="$LOCAL_LATEST" '$0 > local')

            if [ -z "$UNSYNCED_VERSIONS" ]; then
              echo "All versions are already synced."
              exit 0
            fi

            echo "Unsynced versions: $UNSYNCED_VERSIONS"

            for VERSION in $UNSYNCED_VERSIONS; do
              echo "Processing version: $VERSION"

              echo "VERSION=${VERSION}" >> $GITHUB_ENV
              echo "Version set to: ${VERSION}"

              # Clone the specific tag
              if git ls-remote --tags https://github.com/naiba/nezha | grep -q "refs/tags/${VERSION}"; then
                git clone -b ${VERSION} https://github.com/naiba/nezha
              else
                echo "Error: Tag ${VERSION} not found in naiba/nezha repository" && exit 1
              fi

              # Build and prepare artifacts
              rm -rf nezha/cmd/dashboard/*-dist
              wget -q https://github.com/nezhahq/admin-frontend/releases/download/v1.1/dist.zip -O admin-dist.zip
              unzip -q admin-dist.zip
              mv dist nezha/cmd/dashboard/admin-dist
              rm admin-dist.zip

              wget -q https://github.com/nezhahq/user-frontend/releases/download/v1.1.0/dist.zip -O user-dist.zip
              unzip -q user-dist.zip
              mv dist nezha/cmd/dashboard/user-dist
              rm user-dist.zip

              wget -q https://github.com/hi2shark/nazhua/releases/download/v0.4.3/dist.zip -O nazhua-dist.zip
              unzip -q nazhua-dist.zip
              mv dist nezha/cmd/dashboard/nazhua-dist
              rm nazhua-dist.zip

              rm -rf nezha/pkg/geoip/geoip.db
              wget -qO nezha/pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${{ secrets.IPINFO_TOKEN }}

              go install github.com/swaggo/swag/cmd/swag@latest
              export PATH=$PATH:$(go env GOPATH)/bin

              cd nezha
              $(go env GOPATH)/bin/swag init --pd -d . -g ./cmd/dashboard/main.go -o ./cmd/dashboard/docs --parseGoList=false

              cd cmd/dashboard
              go mod tidy
              go build -ldflags="-s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${VERSION#v}"

              mkdir -p ../../output
              mv dashboard ../../output/nezha-dashboard
              mkdir -p ../../output/data
              cp -rf ../../script/config.yaml ../../output/data/config.yaml

              cd ../../output
              zip -qr nezha-freebsd.zip .

              # Move the zip file to the root directory for uploading
              mv nezha-freebsd.zip ../nezha-freebsd-${VERSION}.zip

              echo "Artifacts for version $VERSION prepared."
              cd ..
              ls -all
            done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nezha-freebsd
          path: nezha-freebsd-*.zip
